import ctypes
from numpy.ctypeslib import ndpointer


def getMatching(numNodes,graphArray):

	numEdges=len(graphArray);

	PMlib=ctypes.CDLL('PMlib.so')

	PMlib.pyMatching.argtypes = [ctypes.c_int,ctypes.c_int,ctypes.POINTER(ctypes.c_int),ctypes.POINTER(ctypes.c_int),ctypes.POINTER(ctypes.c_int)]


	PMlib.pyMatching.restype = ndpointer(dtype=ctypes.c_int, shape=(numNodes,))

# initialize ctypes array and fill with edge data
	nodes1=(ctypes.c_int*numEdges)();
	nodes2=(ctypes.c_int*numEdges)();
	weights=(ctypes.c_int*numEdges)();



	for i in range(numEdges):
		nodes1[i]=graphArray[i][0]
		nodes2[i]=graphArray[i][1]
		weights[i]=graphArray[i][2]

	result=PMlib.pyMatching(ctypes.c_int(numNodes),ctypes.c_int(numEdges),nodes1,nodes2,weights)

	return result






# pyInterface.o
# example.o
# misc.o
# PMduals.o
# PMexpand.o
# PMinit.o
# PMinterface.o
# PMmain.o
# PMrepair.o
# PMshrink.o
# MinCost/MinCost.o
# GEOM/GPMinit.o
# GEOM/GPMinterface.o
# GEOM/GPMkdtree.o
# GEOM/GPMmain.o 

#compile all these files as: 

# g++ -c -fPIC filename.cpp -lrt

# then compile all .o files into a shared library

# g++ -shared filename1.o filename2.o .... -o PMlib.so -lrt

# NOTE: the -lrt must come AFTER the filename
